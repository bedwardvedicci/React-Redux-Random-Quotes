{"version":3,"sources":["React.js","Redux.js","index.js"],"names":["QuoteBox","props","propys","id","src","alt","state","newQuote","TopComponent","currentQuote","className","BottomComponent","target","rel","href","onClick","bind","Math","floor","random","QUOTES","NEW","initialState","store","createStore","action","type","index","Object","assign","Container","connect","dispatch","i","Wrapper","ReactDOM","render","document","getElementById"],"mappings":"qMAMMA,EAAW,SAACC,GAChB,IAAMC,EAASD,EAAMC,OACrB,OACE,sBAAKC,GAAG,YAAR,UACE,qBAAKA,GAAG,YAAR,SACE,qBAAKC,IAAI,4EAA4EC,IAAI,yBAE3F,cAAC,EAAD,CAAcC,MAAOJ,EAAOI,QAC5B,cAAC,EAAD,CAAiBC,SAAUL,EAAOK,eAKlCC,EAAe,SAACP,GACpB,IAAMQ,EAAcR,EAAMK,MAAMG,aAChC,OACE,sBAAKC,UAAU,QAAf,UACE,mBAAGP,GAAG,OAAN,SACGM,EAAY,QAEf,4BAAYN,GAAG,SAAf,SACGM,EAAY,aAKfE,EAAkB,SAACV,GACvB,OACE,sBAAKS,UAAU,UAAf,UACE,mBACEP,GAAG,cACHS,OAAO,SACPC,IAAI,sBACJC,KAAK,mCAJP,SAME,+CACY,IAAI,mBAAGJ,UAAU,uBAG/B,yBACEK,QAASd,EAAMM,SAASS,K,UAAWC,KAAKC,MAAoB,GAAdD,KAAKE,WACnDhB,GAAG,YAFL,uBAIY,mBAAGO,UAAU,+B,cChDzBU,EAAS,CACb,CACE,MAAS,wGACT,OAAU,4BAEZ,CACE,MAAS,gGACT,OAAU,uBAEZ,CACE,MAAS,sRACT,OAAU,wBAEZ,CACE,MAAS,uPACT,OAAU,qBAEZ,CACE,MAAS,+GACT,OAAU,iBAEZ,CACE,MAAS,mFACT,OAAU,iCAEZ,CACE,MAAS,oDACT,OAAU,iCAEZ,CACE,MAAS,wKACT,OAAU,wBAEZ,CACE,MAAS,uIACT,OAAU,sBAEZ,CACE,MAAS,uGACT,OAAU,qBAIRC,EAAM,MAYNC,EAAe,CACnBb,aAAcW,EAAOH,KAAKC,MAAoB,GAAdD,KAAKE,YAkB1BI,EAAQC,aAhBL,WAAiC,IAAhClB,EAA+B,uDAAzBgB,EAAcG,EAAW,uCAC9C,OAAOA,EAAOC,MACZ,KAAKL,EACH,OAAOf,EAAMG,eAAiBW,EAAOK,EAAOE,OACzC,WAED,IADA,IAAIA,EAAQF,EAAOE,MACbF,EAAOE,QAAUA,GACrBA,EAAQV,KAAKC,MAAoB,GAAdD,KAAKE,UAE1B,OAAOS,OAAOC,OAAO,GAAIvB,EAAO,CAACG,aAAcW,EAAOO,KALrD,GAODC,OAAOC,OAAO,GAAIvB,EAAO,CAACG,aAAcW,EAAOK,EAAOE,SAC1D,QACE,OAAOrB,MCjEPwB,G,YAAYC,aD6CI,SAACzB,GAAD,MAAY,CAChCA,YAJoB,SAAC0B,GAAD,MAAe,CACnCzB,SAAU,SAAC0B,GAAD,OAAOD,EALF,SAACC,GAAD,MAAQ,CACvBP,KAAML,EACNM,MAAOM,GAGmB1B,CAAS0B,QC3CnBF,EFPY,SAAC9B,GAC7B,OACE,cAAC,EAAD,CAAUC,OAAQD,QEMhBiC,EAAU,WACd,OACE,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACE,cAACO,EAAD,OAONK,IAASC,OAAO,cAAC,EAAD,IAAYC,SAASC,eAAe,W","file":"static/js/main.541ce08c.chunk.js","sourcesContent":["export const Presentational = (props) => {\r\n  return (\r\n    <QuoteBox propys={props} />\r\n  );\r\n}\r\n\r\nconst QuoteBox = (props) => {\r\n  const propys = props.propys;\r\n  return (\r\n    <div id=\"quote-box\">\r\n      <div id=\"imageBird\">\r\n        <img src=\"https://cdn.pixabay.com/photo/2016/04/10/21/28/animal-1320792_960_720.png\" alt=\"heart illustration\"/>\r\n      </div>\r\n      <TopComponent state={propys.state}/>\r\n      <BottomComponent newQuote={propys.newQuote} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst TopComponent = (props) => {\r\n  const currentQuote= props.state.currentQuote;\r\n  return (\r\n    <div className=\"Quote\">\r\n      <p id=\"text\" >\r\n        {currentQuote[\"quote\"]}\r\n      </p>\r\n      <blockquote id=\"author\">\r\n        {currentQuote[\"author\"]}\r\n      </blockquote>\r\n    </div>\r\n  );\r\n}\r\nconst BottomComponent = (props) => {\r\n  return (\r\n    <div className=\"buttons\">\r\n      <a \r\n        id=\"tweet-quote\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        href=\"https://twitter.com/intent/tweet\"\r\n      >\r\n        <button >\r\n          Tweet It!{\" \"}<i className=\"fa fa-twitter\"></i>\r\n        </button>\r\n      </a>\r\n      <button \r\n        onClick={props.newQuote.bind(this, Math.floor(Math.random()*10))} \r\n        id=\"new-quote\"\r\n      >\r\n        New quote <i className=\"fa fa-chevron-right\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}","import {createStore} from \"redux\"\r\nconst QUOTES = [\r\n  {\r\n    \"quote\": \"“Love is that condition in which the happiness of another person is essential to your own.”\",\r\n    \"author\": \"—Robert A. Heinlein\"\r\n  },\r\n  {\r\n    \"quote\": \"“Let us always meet each other with smile, for the smile is the beginning of love.”\",\r\n    \"author\": \"—Mother Teresa\"\r\n  },\r\n  {\r\n    \"quote\": \"“You can search throughout the entire universe for someone who is more deserving of your love and affection than you are yourself, and that person is not to be found anywhere. You yourself, as much as anybody in the entire universe deserve your love and affection.”\",\r\n    \"author\": \"—Gautama Buddha\"\r\n  },\r\n  {\r\n    \"quote\": \"“Love is friendship that has caught fire. It is a quiet understanding, mutual confidence, sharing and forgiving. It is loyalty through good and bad times. It settles for less than perfection and makes allowances for human weaknesses.”\",\r\n    \"author\": \"—Ann Landers\"\r\n  },\r\n  {\r\n    \"quote\": \"“Being deeply loved by someone gives you strength, while loving someone deeply gives you courage.”\",\r\n    \"author\": \"—Lao Tzu\"\r\n  },\r\n  {\r\n    \"quote\": \"“Love is the only force capable of transforming an enemy into friend.”\",\r\n    \"author\": \"—Martin Luther King, Jr.\"\r\n  },\r\n  {\r\n    \"quote\": \"“Our first and last love is self-love.”\",\r\n    \"author\": \"—Christian Nestell Bovee\"\r\n  },\r\n  {\r\n    \"quote\": \"“You will find as you look back upon your life that the moments when you have truly lived are the moments when you have done things in the spirit of love.”\",\r\n    \"author\": \"—Henry Drummond\"\r\n  },\r\n  {\r\n    \"quote\": \"“Love recognizes no barriers. It jumps hurdles, leaps fences, penetrates walls to arrive at its destination full of hope.”\",\r\n    \"author\": \"—Maya Angelou\"\r\n  },\r\n  {\r\n    \"quote\": \"“Love and compassion are necessities, not luxuries. Without them humanity cannot survive.”\",\r\n    \"author\": \"—Dalai Lama\"\r\n  } \r\n]// const QUOTES\r\n\r\nconst NEW = \"NEW\";\r\nconst newQuote = (i) => ({\r\n  type: NEW,\r\n  index: i\r\n})\r\nexport const mapD2P = (dispatch) => ({\r\n  newQuote: (i) => dispatch(newQuote(i))\r\n})\r\nexport const mapS2P = (state) => ({\r\n  state\r\n})\r\n//→→→→→→→→→→→→→→→→→→→→→→→→→→→→→→→→→→→→→→→→→→\r\nconst initialState = {\r\n  currentQuote: QUOTES[Math.floor(Math.random()*10)]\r\n}\r\nconst reducer = (state=initialState, action) => {\r\n  switch(action.type) {\r\n    case(NEW)\r\n    : return state.currentQuote === QUOTES[action.index]\r\n      ? (() => {\r\n        let index = action.index;\r\n        while(action.index === index) {\r\n          index = Math.floor(Math.random()*10)\r\n        }\r\n        return Object.assign({}, state, {currentQuote: QUOTES[index]})\r\n      })()\r\n      : Object.assign({}, state, {currentQuote: QUOTES[action.index]})\r\n    default\r\n    : return state\r\n  }\r\n}\r\nexport const store = createStore(reducer);","import ReactDOM from \"react-dom\";\r\nimport {Presentational} from \"./React\";\r\nimport {Provider, connect} from \"react-redux\";\r\nimport {store, mapS2P, mapD2P} from \"./Redux\";\r\nimport \"./index.css\";\r\nimport \"./style.css\";\r\n\r\nconst Container = connect(mapS2P, mapD2P)(Presentational);\r\nconst Wrapper = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Container />\r\n    </Provider>\r\n  );\r\n}\r\n\r\n\r\n\r\nReactDOM.render(<Wrapper/>, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}